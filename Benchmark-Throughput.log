# JMH version: 1.36
# VM version: JDK 1.8.0_322, OpenJDK 64-Bit Server VM, 25.322-b06
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65519:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testCircularClass

# Run progress: 0.00% complete, ETA 00:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 70.268 ops/ms
# Warmup Iteration   2: 77.234 ops/ms
Iteration   1: 30.726 ops/ms
Iteration   2: 24.369 ops/ms
Iteration   3: 22.603 ops/ms
Iteration   4: 20.787 ops/ms
Iteration   5: 38.459 ops/ms


Result "com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testCircularClass":
  27.389 ±(99.9%) 27.854 ops/ms [Average]
  (min, avg, max) = (20.787, 27.389, 38.459), stdev = 7.234
  CI (99.9%): [≈ 0, 55.243] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 1.8.0_322, OpenJDK 64-Bit Server VM, 25.322-b06
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65519:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testList

# Run progress: 16.67% complete, ETA 00:05:54
# Fork: 1 of 1
# Warmup Iteration   1: 32.421 ops/ms
# Warmup Iteration   2: 34.997 ops/ms
Iteration   1: 34.251 ops/ms
Iteration   2: 42.267 ops/ms
Iteration   3: 42.702 ops/ms
Iteration   4: 43.033 ops/ms
Iteration   5: 42.113 ops/ms


Result "com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testList":
  40.873 ±(99.9%) 14.322 ops/ms [Average]
  (min, avg, max) = (34.251, 40.873, 43.033), stdev = 3.719
  CI (99.9%): [26.551, 55.196] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 1.8.0_322, OpenJDK 64-Bit Server VM, 25.322-b06
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65519:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testNestedClass

# Run progress: 33.33% complete, ETA 00:04:43
# Fork: 1 of 1
# Warmup Iteration   1: 16.866 ops/ms
# Warmup Iteration   2: 17.295 ops/ms
Iteration   1: 24.201 ops/ms
Iteration   2: 26.669 ops/ms
Iteration   3: 26.422 ops/ms
Iteration   4: 26.494 ops/ms
Iteration   5: 21.734 ops/ms


Result "com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testNestedClass":
  25.104 ±(99.9%) 8.234 ops/ms [Average]
  (min, avg, max) = (21.734, 25.104, 26.669), stdev = 2.138
  CI (99.9%): [16.869, 33.338] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 1.8.0_322, OpenJDK 64-Bit Server VM, 25.322-b06
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65519:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testNestedList

# Run progress: 50.00% complete, ETA 00:03:32
# Fork: 1 of 1
# Warmup Iteration   1: 8.008 ops/ms
# Warmup Iteration   2: 5.263 ops/ms
Iteration   1: 6.630 ops/ms
Iteration   2: 11.550 ops/ms
Iteration   3: 11.830 ops/ms
Iteration   4: 12.393 ops/ms
Iteration   5: 12.554 ops/ms


Result "com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testNestedList":
  10.991 ±(99.9%) 9.518 ops/ms [Average]
  (min, avg, max) = (6.630, 10.991, 12.554), stdev = 2.472
  CI (99.9%): [1.473, 20.510] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 1.8.0_322, OpenJDK 64-Bit Server VM, 25.322-b06
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65519:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testSimpleClass

# Run progress: 66.67% complete, ETA 00:02:21
# Fork: 1 of 1
# Warmup Iteration   1: 109.346 ops/ms
# Warmup Iteration   2: 119.890 ops/ms
Iteration   1: 119.292 ops/ms
Iteration   2: 115.105 ops/ms
Iteration   3: 120.179 ops/ms
Iteration   4: 121.353 ops/ms
Iteration   5: 121.791 ops/ms


Result "com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testSimpleClass":
  119.544 ±(99.9%) 10.278 ops/ms [Average]
  (min, avg, max) = (115.105, 119.544, 121.791), stdev = 2.669
  CI (99.9%): [109.266, 129.822] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 1.8.0_322, OpenJDK 64-Bit Server VM, 25.322-b06
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65519:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testThirdLevel

# Run progress: 83.33% complete, ETA 00:01:10
# Fork: 1 of 1
# Warmup Iteration   1: 481.747 ops/ms
# Warmup Iteration   2: 529.345 ops/ms
Iteration   1: 490.074 ops/ms
Iteration   2: 467.195 ops/ms
Iteration   3: 502.494 ops/ms
Iteration   4: 477.282 ops/ms
Iteration   5: 516.794 ops/ms


Result "com.github.os72.protobuf.dynamic.codec.MessageCodecJMHTest.testThirdLevel":
  490.768 ±(99.9%) 75.870 ops/ms [Average]
  (min, avg, max) = (467.195, 490.768, 516.794), stdev = 19.703
  CI (99.9%): [414.898, 566.638] (assumes normal distribution)


# Run complete. Total time: 00:07:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                               Mode  Cnt    Score    Error   Units
MessageCodecJMHTest.testCircularClass  thrpt    5   27.389 ± 27.854  ops/ms
MessageCodecJMHTest.testList           thrpt    5   40.873 ± 14.322  ops/ms
MessageCodecJMHTest.testNestedClass    thrpt    5   25.104 ±  8.234  ops/ms
MessageCodecJMHTest.testNestedList     thrpt    5   10.991 ±  9.518  ops/ms
MessageCodecJMHTest.testSimpleClass    thrpt    5  119.544 ± 10.278  ops/ms
MessageCodecJMHTest.testThirdLevel     thrpt    5  490.768 ± 75.870  ops/ms
